[
    {
        "label": "django.contrib.auth.models",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "AbstractUser",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "django.contrib.auth.validators",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.contrib.auth.validators",
        "description": "django.contrib.auth.validators",
        "detail": "django.contrib.auth.validators",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "django.utils.timezone",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.utils.timezone",
        "description": "django.utils.timezone",
        "detail": "django.utils.timezone",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "NinjaAPI",
        "importPath": "ninja",
        "description": "ninja",
        "isExtraImport": true,
        "detail": "ninja",
        "documentation": {}
    },
    {
        "label": "Schema",
        "importPath": "ninja",
        "description": "ninja",
        "isExtraImport": true,
        "detail": "ninja",
        "documentation": {}
    },
    {
        "label": "Schema",
        "importPath": "ninja",
        "description": "ninja",
        "isExtraImport": true,
        "detail": "ninja",
        "documentation": {}
    },
    {
        "label": "HttpBearer",
        "importPath": "ninja.security",
        "description": "ninja.security",
        "isExtraImport": true,
        "detail": "ninja.security",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "BaseModel",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "config",
        "importPath": "decouple",
        "description": "decouple",
        "isExtraImport": true,
        "detail": "decouple",
        "documentation": {}
    },
    {
        "label": "obtain_auth_token",
        "importPath": "rest_framework.authtoken.views",
        "description": "rest_framework.authtoken.views",
        "isExtraImport": true,
        "detail": "rest_framework.authtoken.views",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0001_initial",
        "description": "api.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('auth', '0012_alter_user_first_name_max_length'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='AmenityType',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "api.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "AuthBearer",
        "kind": 6,
        "importPath": "api.api",
        "description": "api.api",
        "peekOfCode": "class AuthBearer(HttpBearer):\n    def authenticate(self, request, token):\n        if token == \"supersecret\":\n            return token\n# Schemas\nclass UserSchema(Schema):\n    username: str\n    email: str\n    is_host: bool\nclass PropertySchema(Schema):",
        "detail": "api.api",
        "documentation": {}
    },
    {
        "label": "UserSchema",
        "kind": 6,
        "importPath": "api.api",
        "description": "api.api",
        "peekOfCode": "class UserSchema(Schema):\n    username: str\n    email: str\n    is_host: bool\nclass PropertySchema(Schema):\n    id: int\n    title: str\n    description: str\n    price: float\n    location: str",
        "detail": "api.api",
        "documentation": {}
    },
    {
        "label": "PropertySchema",
        "kind": 6,
        "importPath": "api.api",
        "description": "api.api",
        "peekOfCode": "class PropertySchema(Schema):\n    id: int\n    title: str\n    description: str\n    price: float\n    location: str\n    available_start: str\n    available_end: str\nclass BookingSchema(Schema):\n    id: int",
        "detail": "api.api",
        "documentation": {}
    },
    {
        "label": "BookingSchema",
        "kind": 6,
        "importPath": "api.api",
        "description": "api.api",
        "peekOfCode": "class BookingSchema(Schema):\n    id: int\n    guest_id: int\n    property_id: int\n    check_in_date: str\n    check_out_date: str\n# User endpoints\n@app.get(\"/users/{token}\", response=UserSchema, auth=AuthBearer())\ndef user_details(request, token: str):\n    user = get_object_or_404(User, auth_token=token)",
        "detail": "api.api",
        "documentation": {}
    },
    {
        "label": "user_details",
        "kind": 2,
        "importPath": "api.api",
        "description": "api.api",
        "peekOfCode": "def user_details(request, token: str):\n    user = get_object_or_404(User, auth_token=token)\n    return user\n# Property endpoints\n@app.get(\"/properties\", response=List[PropertySchema])\ndef list_properties(request):\n    return Property.objects.all()\n@app.post(\"/properties\", response=PropertySchema)\ndef create_property(request, property: PropertySchema):\n    return Property.objects.create(**property.dict())",
        "detail": "api.api",
        "documentation": {}
    },
    {
        "label": "list_properties",
        "kind": 2,
        "importPath": "api.api",
        "description": "api.api",
        "peekOfCode": "def list_properties(request):\n    return Property.objects.all()\n@app.post(\"/properties\", response=PropertySchema)\ndef create_property(request, property: PropertySchema):\n    return Property.objects.create(**property.dict())\n@app.get(\"/properties/{property_id}\", response=PropertySchema)\ndef get_property(request, property_id: int):\n    return get_object_or_404(Property, id=property_id)\n@app.put(\"/properties/{property_id}\", response=PropertySchema)\ndef update_property(request, property_id: int, data: PropertySchema):",
        "detail": "api.api",
        "documentation": {}
    },
    {
        "label": "create_property",
        "kind": 2,
        "importPath": "api.api",
        "description": "api.api",
        "peekOfCode": "def create_property(request, property: PropertySchema):\n    return Property.objects.create(**property.dict())\n@app.get(\"/properties/{property_id}\", response=PropertySchema)\ndef get_property(request, property_id: int):\n    return get_object_or_404(Property, id=property_id)\n@app.put(\"/properties/{property_id}\", response=PropertySchema)\ndef update_property(request, property_id: int, data: PropertySchema):\n    property = get_object_or_404(Property, id=property_id)\n    for attr, value in data.dict().items():\n        setattr(property, attr, value)",
        "detail": "api.api",
        "documentation": {}
    },
    {
        "label": "get_property",
        "kind": 2,
        "importPath": "api.api",
        "description": "api.api",
        "peekOfCode": "def get_property(request, property_id: int):\n    return get_object_or_404(Property, id=property_id)\n@app.put(\"/properties/{property_id}\", response=PropertySchema)\ndef update_property(request, property_id: int, data: PropertySchema):\n    property = get_object_or_404(Property, id=property_id)\n    for attr, value in data.dict().items():\n        setattr(property, attr, value)\n    property.save()\n    return property\n@app.delete(\"/properties/{property_id}\")",
        "detail": "api.api",
        "documentation": {}
    },
    {
        "label": "update_property",
        "kind": 2,
        "importPath": "api.api",
        "description": "api.api",
        "peekOfCode": "def update_property(request, property_id: int, data: PropertySchema):\n    property = get_object_or_404(Property, id=property_id)\n    for attr, value in data.dict().items():\n        setattr(property, attr, value)\n    property.save()\n    return property\n@app.delete(\"/properties/{property_id}\")\ndef delete_property(request, property_id: int):\n    property = get_object_or_404(Property, id=property_id)\n    property.delete()",
        "detail": "api.api",
        "documentation": {}
    },
    {
        "label": "delete_property",
        "kind": 2,
        "importPath": "api.api",
        "description": "api.api",
        "peekOfCode": "def delete_property(request, property_id: int):\n    property = get_object_or_404(Property, id=property_id)\n    property.delete()\n    return {\"success\": True}\n# Booking endpoints\n@app.get(\"/bookings\", response=List[BookingSchema])\ndef list_bookings(request):\n    return Booking.objects.all()\n@app.post(\"/bookings\", response=BookingSchema)\ndef create_booking(request, booking: BookingSchema):",
        "detail": "api.api",
        "documentation": {}
    },
    {
        "label": "list_bookings",
        "kind": 2,
        "importPath": "api.api",
        "description": "api.api",
        "peekOfCode": "def list_bookings(request):\n    return Booking.objects.all()\n@app.post(\"/bookings\", response=BookingSchema)\ndef create_booking(request, booking: BookingSchema):\n    return Booking.objects.create(**booking.dict())\n@app.get(\"/bookings/{booking_id}\", response=BookingSchema)\ndef get_booking(request, booking_id: int):\n    return get_object_or_404(Booking, id=booking_id)\n@app.put(\"/bookings/{booking_id}\", response=BookingSchema)\ndef update_booking(request, booking_id: int, data: BookingSchema):",
        "detail": "api.api",
        "documentation": {}
    },
    {
        "label": "create_booking",
        "kind": 2,
        "importPath": "api.api",
        "description": "api.api",
        "peekOfCode": "def create_booking(request, booking: BookingSchema):\n    return Booking.objects.create(**booking.dict())\n@app.get(\"/bookings/{booking_id}\", response=BookingSchema)\ndef get_booking(request, booking_id: int):\n    return get_object_or_404(Booking, id=booking_id)\n@app.put(\"/bookings/{booking_id}\", response=BookingSchema)\ndef update_booking(request, booking_id: int, data: BookingSchema):\n    booking = get_object_or_404(Booking, id=booking_id)\n    for attr, value in data.dict().items():\n        setattr(booking, attr, value)",
        "detail": "api.api",
        "documentation": {}
    },
    {
        "label": "get_booking",
        "kind": 2,
        "importPath": "api.api",
        "description": "api.api",
        "peekOfCode": "def get_booking(request, booking_id: int):\n    return get_object_or_404(Booking, id=booking_id)\n@app.put(\"/bookings/{booking_id}\", response=BookingSchema)\ndef update_booking(request, booking_id: int, data: BookingSchema):\n    booking = get_object_or_404(Booking, id=booking_id)\n    for attr, value in data.dict().items():\n        setattr(booking, attr, value)\n    booking.save()\n    return booking\n@app.delete(\"/bookings/{booking_id}\")",
        "detail": "api.api",
        "documentation": {}
    },
    {
        "label": "update_booking",
        "kind": 2,
        "importPath": "api.api",
        "description": "api.api",
        "peekOfCode": "def update_booking(request, booking_id: int, data: BookingSchema):\n    booking = get_object_or_404(Booking, id=booking_id)\n    for attr, value in data.dict().items():\n        setattr(booking, attr, value)\n    booking.save()\n    return booking\n@app.delete(\"/bookings/{booking_id}\")\ndef delete_booking(request, booking_id: int):\n    booking = get_object_or_404(Booking, id=booking_id)\n    booking.delete()",
        "detail": "api.api",
        "documentation": {}
    },
    {
        "label": "delete_booking",
        "kind": 2,
        "importPath": "api.api",
        "description": "api.api",
        "peekOfCode": "def delete_booking(request, booking_id: int):\n    booking = get_object_or_404(Booking, id=booking_id)\n    booking.delete()\n    return {\"success\": True}",
        "detail": "api.api",
        "documentation": {}
    },
    {
        "label": "app",
        "kind": 5,
        "importPath": "api.api",
        "description": "api.api",
        "peekOfCode": "app = NinjaAPI()\nclass AuthBearer(HttpBearer):\n    def authenticate(self, request, token):\n        if token == \"supersecret\":\n            return token\n# Schemas\nclass UserSchema(Schema):\n    username: str\n    email: str\n    is_host: bool",
        "detail": "api.api",
        "documentation": {}
    },
    {
        "label": "ApiConfig",
        "kind": 6,
        "importPath": "api.apps",
        "description": "api.apps",
        "peekOfCode": "class ApiConfig(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"api\"",
        "detail": "api.apps",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 6,
        "importPath": "api.models",
        "description": "api.models",
        "peekOfCode": "class User(AbstractUser):\n    is_host = models.BooleanField(default=False)\n    groups = models.ManyToManyField(\n        \"auth.Group\",\n        related_name=\"custom_user_set\",\n        blank=True,\n        verbose_name=\"groups\",\n        help_text=\"The groups this user belongs to.\",\n    )\n    user_permissions = models.ManyToManyField(",
        "detail": "api.models",
        "documentation": {}
    },
    {
        "label": "AmenityType",
        "kind": 6,
        "importPath": "api.models",
        "description": "api.models",
        "peekOfCode": "class AmenityType(models.Model):\n    name = models.CharField(max_length=100)\n# This model is used to store different types of properties\nclass PropertyType(models.Model):\n    name = models.CharField(max_length=100)\n# This model is used to store information about rooms within properties\nclass Room(models.Model):\n    name = models.CharField(max_length=200)\n    capacity = models.PositiveSmallIntegerField()\n# This model is used to store detailed information about a property",
        "detail": "api.models",
        "documentation": {}
    },
    {
        "label": "PropertyType",
        "kind": 6,
        "importPath": "api.models",
        "description": "api.models",
        "peekOfCode": "class PropertyType(models.Model):\n    name = models.CharField(max_length=100)\n# This model is used to store information about rooms within properties\nclass Room(models.Model):\n    name = models.CharField(max_length=200)\n    capacity = models.PositiveSmallIntegerField()\n# This model is used to store detailed information about a property\nclass Property(models.Model):\n    host = models.ForeignKey(User, on_delete=models.CASCADE)\n    title = models.CharField(max_length=200)",
        "detail": "api.models",
        "documentation": {}
    },
    {
        "label": "Room",
        "kind": 6,
        "importPath": "api.models",
        "description": "api.models",
        "peekOfCode": "class Room(models.Model):\n    name = models.CharField(max_length=200)\n    capacity = models.PositiveSmallIntegerField()\n# This model is used to store detailed information about a property\nclass Property(models.Model):\n    host = models.ForeignKey(User, on_delete=models.CASCADE)\n    title = models.CharField(max_length=200)\n    description = models.TextField()\n    price = models.DecimalField(max_digits=6, decimal_places=2)\n    location = models.CharField(max_length=200)",
        "detail": "api.models",
        "documentation": {}
    },
    {
        "label": "Property",
        "kind": 6,
        "importPath": "api.models",
        "description": "api.models",
        "peekOfCode": "class Property(models.Model):\n    host = models.ForeignKey(User, on_delete=models.CASCADE)\n    title = models.CharField(max_length=200)\n    description = models.TextField()\n    price = models.DecimalField(max_digits=6, decimal_places=2)\n    location = models.CharField(max_length=200)\n    available_start = models.DateField()\n    available_end = models.DateField()\n    photos = models.ManyToManyField(\"Photo\")\n    property_type = models.ForeignKey(",
        "detail": "api.models",
        "documentation": {}
    },
    {
        "label": "Amenity",
        "kind": 6,
        "importPath": "api.models",
        "description": "api.models",
        "peekOfCode": "class Amenity(models.Model):\n    property = models.ForeignKey(\n        Property, on_delete=models.CASCADE, related_name=\"property_amenities\"\n    )\n    amenity_type = models.ForeignKey(\n        AmenityType, on_delete=models.CASCADE, default=None, related_name=\"amenity_type\"\n    )\n# This model is used to store booking information made by guests\nclass Booking(models.Model):\n    guest = models.ForeignKey(User, on_delete=models.CASCADE)",
        "detail": "api.models",
        "documentation": {}
    },
    {
        "label": "Booking",
        "kind": 6,
        "importPath": "api.models",
        "description": "api.models",
        "peekOfCode": "class Booking(models.Model):\n    guest = models.ForeignKey(User, on_delete=models.CASCADE)\n    property = models.ForeignKey(Property, on_delete=models.CASCADE)\n    check_in_date = models.DateField()\n    check_out_date = models.DateField()\n    rooms = models.ManyToManyField(Room, through=\"RoomBooking\")\n# This model is used to store details of room bookings within a general booking\nclass RoomBooking(models.Model):\n    room = models.ForeignKey(Room, on_delete=models.CASCADE)\n    booking = models.ForeignKey(Booking, on_delete=models.CASCADE)",
        "detail": "api.models",
        "documentation": {}
    },
    {
        "label": "RoomBooking",
        "kind": 6,
        "importPath": "api.models",
        "description": "api.models",
        "peekOfCode": "class RoomBooking(models.Model):\n    room = models.ForeignKey(Room, on_delete=models.CASCADE)\n    booking = models.ForeignKey(Booking, on_delete=models.CASCADE)\n    adults = models.PositiveSmallIntegerField()\n    children = models.PositiveSmallIntegerField()\n# This model is used to store reviews made by users for properties\nclass Review(models.Model):\n    reviewer = models.ForeignKey(User, on_delete=models.CASCADE)\n    property = models.ForeignKey(Property, on_delete=models.CASCADE)\n    review_text = models.TextField()",
        "detail": "api.models",
        "documentation": {}
    },
    {
        "label": "Review",
        "kind": 6,
        "importPath": "api.models",
        "description": "api.models",
        "peekOfCode": "class Review(models.Model):\n    reviewer = models.ForeignKey(User, on_delete=models.CASCADE)\n    property = models.ForeignKey(Property, on_delete=models.CASCADE)\n    review_text = models.TextField()\n    rating = models.PositiveSmallIntegerField()\n# This model is used to store information about photos related to properties\nclass Photo(models.Model):\n    url = models.URLField()\n    alt_text = models.CharField(max_length=200)",
        "detail": "api.models",
        "documentation": {}
    },
    {
        "label": "Photo",
        "kind": 6,
        "importPath": "api.models",
        "description": "api.models",
        "peekOfCode": "class Photo(models.Model):\n    url = models.URLField()\n    alt_text = models.CharField(max_length=200)",
        "detail": "api.models",
        "documentation": {}
    },
    {
        "label": "PropertySchema",
        "kind": 6,
        "importPath": "api.schemas",
        "description": "api.schemas",
        "peekOfCode": "class PropertySchema(Schema):\n    id: int\n    name: str\n    address: str\n    description: str\n    price: float\n    host: int\nclass BookingSchema(Schema):\n    id: int\n    property: int",
        "detail": "api.schemas",
        "documentation": {}
    },
    {
        "label": "BookingSchema",
        "kind": 6,
        "importPath": "api.schemas",
        "description": "api.schemas",
        "peekOfCode": "class BookingSchema(Schema):\n    id: int\n    property: int\n    guest: int\n    start_date: str\n    end_date: str\nclass UserDetailsSchema(Schema):\n    username: str\n    is_host: bool",
        "detail": "api.schemas",
        "documentation": {}
    },
    {
        "label": "UserDetailsSchema",
        "kind": 6,
        "importPath": "api.schemas",
        "description": "api.schemas",
        "peekOfCode": "class UserDetailsSchema(Schema):\n    username: str\n    is_host: bool",
        "detail": "api.schemas",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "api.urls",
        "description": "api.urls",
        "peekOfCode": "urlpatterns = [path(\"api/\", app.urls)]",
        "detail": "api.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "core.asgi",
        "description": "core.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "core.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = config(\"SECRET_KEY\", default=\"vbjldabv89080vda0\")\n# SECURITY WARNING: don't run with debug turned on in production!\n# DEBUG\nDEBUG = config(\"DEBUG\", default=False, cast=bool)\n# ALLOWED_HOSTS\nALLOWED_HOSTS = []",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "SECRET_KEY = config(\"SECRET_KEY\", default=\"vbjldabv89080vda0\")\n# SECURITY WARNING: don't run with debug turned on in production!\n# DEBUG\nDEBUG = config(\"DEBUG\", default=False, cast=bool)\n# ALLOWED_HOSTS\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "DEBUG = config(\"DEBUG\", default=False, cast=bool)\n# ALLOWED_HOSTS\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",\n    # My apps",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",\n    # My apps\n    \"api.apps.ApiConfig\",\n    # Third party apps",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_BACKEND",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "EMAIL_BACKEND = \"django.core.mail.backends.console.EmailBackend\"\nSITE_ID = 1\nACCOUNT_EMAIL_REQUIRED = False\nACCOUNT_AUTHENTICATION_METHOD = \"username\"\nACCOUNT_EMAIL_VERIFICATION = \"optional\"\nMIDDLEWARE = [\n    \"django.middleware.security.SecurityMiddleware\",\n    \"django.contrib.sessions.middleware.SessionMiddleware\",\n    \"corsheaders.middleware.CorsMiddleware\",\n    \"django.middleware.common.CommonMiddleware\",",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "SITE_ID",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "SITE_ID = 1\nACCOUNT_EMAIL_REQUIRED = False\nACCOUNT_AUTHENTICATION_METHOD = \"username\"\nACCOUNT_EMAIL_VERIFICATION = \"optional\"\nMIDDLEWARE = [\n    \"django.middleware.security.SecurityMiddleware\",\n    \"django.contrib.sessions.middleware.SessionMiddleware\",\n    \"corsheaders.middleware.CorsMiddleware\",\n    \"django.middleware.common.CommonMiddleware\",\n    \"django.middleware.csrf.CsrfViewMiddleware\",",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "ACCOUNT_EMAIL_REQUIRED",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "ACCOUNT_EMAIL_REQUIRED = False\nACCOUNT_AUTHENTICATION_METHOD = \"username\"\nACCOUNT_EMAIL_VERIFICATION = \"optional\"\nMIDDLEWARE = [\n    \"django.middleware.security.SecurityMiddleware\",\n    \"django.contrib.sessions.middleware.SessionMiddleware\",\n    \"corsheaders.middleware.CorsMiddleware\",\n    \"django.middleware.common.CommonMiddleware\",\n    \"django.middleware.csrf.CsrfViewMiddleware\",\n    \"django.contrib.auth.middleware.AuthenticationMiddleware\",",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "ACCOUNT_AUTHENTICATION_METHOD",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "ACCOUNT_AUTHENTICATION_METHOD = \"username\"\nACCOUNT_EMAIL_VERIFICATION = \"optional\"\nMIDDLEWARE = [\n    \"django.middleware.security.SecurityMiddleware\",\n    \"django.contrib.sessions.middleware.SessionMiddleware\",\n    \"corsheaders.middleware.CorsMiddleware\",\n    \"django.middleware.common.CommonMiddleware\",\n    \"django.middleware.csrf.CsrfViewMiddleware\",\n    \"django.contrib.auth.middleware.AuthenticationMiddleware\",\n    \"django.contrib.messages.middleware.MessageMiddleware\",",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "ACCOUNT_EMAIL_VERIFICATION",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "ACCOUNT_EMAIL_VERIFICATION = \"optional\"\nMIDDLEWARE = [\n    \"django.middleware.security.SecurityMiddleware\",\n    \"django.contrib.sessions.middleware.SessionMiddleware\",\n    \"corsheaders.middleware.CorsMiddleware\",\n    \"django.middleware.common.CommonMiddleware\",\n    \"django.middleware.csrf.CsrfViewMiddleware\",\n    \"django.contrib.auth.middleware.AuthenticationMiddleware\",\n    \"django.contrib.messages.middleware.MessageMiddleware\",\n    \"django.middleware.clickjacking.XFrameOptionsMiddleware\",",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "MIDDLEWARE = [\n    \"django.middleware.security.SecurityMiddleware\",\n    \"django.contrib.sessions.middleware.SessionMiddleware\",\n    \"corsheaders.middleware.CorsMiddleware\",\n    \"django.middleware.common.CommonMiddleware\",\n    \"django.middleware.csrf.CsrfViewMiddleware\",\n    \"django.contrib.auth.middleware.AuthenticationMiddleware\",\n    \"django.contrib.messages.middleware.MessageMiddleware\",\n    \"django.middleware.clickjacking.XFrameOptionsMiddleware\",\n    \"allauth.account.middleware.AccountMiddleware\",  # Add AccountMiddleware to MIDDLEWARE:",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "CORS_ALLOWED_ORIGINS",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "CORS_ALLOWED_ORIGINS = [\n    \"http://localhost:3000\",\n]\nROOT_URLCONF = \"core.urls\"\nTEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "ROOT_URLCONF = \"core.urls\"\nTEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"django.template.context_processors.debug\",\n                \"django.template.context_processors.request\",",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"django.template.context_processors.debug\",\n                \"django.template.context_processors.request\",\n                \"django.contrib.auth.context_processors.auth\",",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "WSGI_APPLICATION = \"core.wsgi.application\"\n# Database\n# https://docs.djangoproject.com/en/5.0/ref/settings/#databases\n# Database\nDATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.sqlite3\",\n        \"NAME\": BASE_DIR / \"db.sqlite3\",\n    }\n}",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "DATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.sqlite3\",\n        \"NAME\": BASE_DIR / \"db.sqlite3\",\n    }\n}\n# Password validation\n# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.UserAttributeSimilarityValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.MinimumLengthValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.CommonPasswordValidator\",\n    },",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "LANGUAGE_CODE = \"en-us\"\nTIME_ZONE = \"UTC\"\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = \"static/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "TIME_ZONE = \"UTC\"\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = \"static/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nREST_FRAMEWORK = {",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = \"static/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nREST_FRAMEWORK = {\n    \"DEFAULT_AUTHENTICATION_CLASSES\": [",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = \"static/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nREST_FRAMEWORK = {\n    \"DEFAULT_AUTHENTICATION_CLASSES\": [\n        \"rest_framework.authentication.TokenAuthentication\",",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "STATIC_URL = \"static/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nREST_FRAMEWORK = {\n    \"DEFAULT_AUTHENTICATION_CLASSES\": [\n        \"rest_framework.authentication.TokenAuthentication\",\n    ],\n}",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nREST_FRAMEWORK = {\n    \"DEFAULT_AUTHENTICATION_CLASSES\": [\n        \"rest_framework.authentication.TokenAuthentication\",\n    ],\n}",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "REST_FRAMEWORK",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "REST_FRAMEWORK = {\n    \"DEFAULT_AUTHENTICATION_CLASSES\": [\n        \"rest_framework.authentication.TokenAuthentication\",\n    ],\n}",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "core.urls",
        "description": "core.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"admin/\", admin.site.urls),\n    path(\"api-token-auth/\", obtain_auth_token, name=\"api_token_auth\"),\n    path(\"auth/\", include(\"dj_rest_auth.urls\")),\n    path(\"auth/registration/\", include(\"dj_rest_auth.registration.urls\")),\n    path(\"\", include(\"api.urls\")),\n]",
        "detail": "core.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "core.wsgi",
        "description": "core.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "core.wsgi",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'core.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]